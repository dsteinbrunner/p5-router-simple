# NAME

Router::Simple - simple HTTP router

# SYNOPSIS

    use Router::Simple;

    my $router = Router::Simple->new();
    $router->connect('/', {controller => 'Root', action => 'show'});
    $router->connect('/blog/{year}/{month}', {controller => 'Blog', action => 'monthly'});

# DESCRIPTION

Router::Simple is simple router class.

# METHODS

- my $router = Router::Simple->new();

create new instance of Router::Simple.

- $router->connect($pattern, \%destination[, \%options])

define the new route to $router.

    - $pattern

    - \%destionation

    - \%options

- $router->match($req|$path)

Match a URL against against one of the routes contained.

$req is a [HTTP::Request](http://search.cpan.org/search?mode=module&query=HTTP::Request) like object or plain hashref.
If $req is object, it must respond to __uri__ and __method__.
Off course, you can use [Plack::Request](http://search.cpan.org/search?mode=module&query=Plack::Request) as $req.

If you want to use Router::Simple for not HTTP routing such as FTP, you can pass $req as plain string.

This method returns a plain hashref.Example return value as following:

    {
        controller => 'Blog',
        action     => 'daily',
        args       => { year => 2010, month => '03', day => '04' },
    }

Will return None if no valid match is found.

# AUTHOR

Tokuhiro Matsuno <tokuhirom AAJKLFJEF GMAIL COM>

# SEE ALSO

Router::Simple is inspired by L<routes.py|http://routes.groovie.org/>.

[Path::Dispatcher](http://search.cpan.org/search?mode=module&query=Path::Dispatcher) is similar, but so complex.

[Path::Router](http://search.cpan.org/search?mode=module&query=Path::Router) is heavy.It depend to [Moose](http://search.cpan.org/search?mode=module&query=Moose).

[HTTP::Router](http://search.cpan.org/search?mode=module&query=HTTP::Router) is heavy, too.It depend to Mouse, and more.

[HTTPx::Dispatcher](http://search.cpan.org/search?mode=module&query=HTTPx::Dispatcher) is my old one.It does not provides OOish interface.

# THANKS TO

DeNA

# LICENSE

Copyright (C) Tokuhiro Matsuno

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.