# NAME

Router::Simple - simple HTTP router

# SYNOPSIS

    use Router::Simple;

    my $router = Router::Simple->new();
    $router->connect('/', {controller => 'Root', action => 'show'});
    $router->connect('/blog/{year}/{month}', {controller => 'Blog', action => 'monthly'});

# DESCRIPTION

Router::Simple is simple router class.

# METHODS

- my $router = Router::Simple->new();

create new instance of Router::Simple.

- $router->connect([$name, ] $pattern, \%destination[, \%options])

Add new rule for $router.

    $router->connect( '/', { controller => 'Root', action => 'index' } );
    $router->connect( 'show_entry', '/blog/:id',
        { controller => 'Blog', action => 'show' } );
    $router->connect( '/blog/:id', { controller => 'Blog', action => 'show' } );
    $router->connect( '/comment', { controller => 'Comment', action => 'new_comment' }, {method => 'POST'} );

define the new route to $router.

- $router->match($req|$path)

Match a URL against against one of the routes contained.

$req is a [PSGI](http://search.cpan.org/search?mode=module&query=PSGI)'s $env or plain string.

This method returns a plain hashref.Example return value as following:

    {
        controller => 'Blog',
        action     => 'daily',
        args       => { year => 2010, month => '03', day => '04' },
    }

Will return None if no valid match is found.

- $router->url_for($anchor, \%opts)

generate path string from rule named $anchor.

You must pass the each parameters to \%opts.

    my $router = Router::Simple->new();
    $router->connect('articles', '/article', {controller => 'Article', action => 'index'});
    $router->connect('edit_articles', '/article/{id}', {controller => 'Article', action => 'edit'});
    $router->url_for('articles'); # => /articles
    $router->url_for('edit_articles', {id => 3}); # => /articles/3/edit

- $router->as_string()

Dump $router as string.

The example output is following:

    home         GET  /
    blog_monthly GET  /blog/{year}/{month}
                 GET  /blog/{year:\d{1,4}}/{month:\d{2}}/{day:\d\d}
                 POST /comment
                 GET  /

# AUTHOR

Tokuhiro Matsuno <tokuhirom AAJKLFJEF GMAIL COM>

# SEE ALSO

Router::Simple is inspired by L<routes.py|http://routes.groovie.org/>.

[Path::Dispatcher](http://search.cpan.org/search?mode=module&query=Path::Dispatcher) is similar, but so complex.

[Path::Router](http://search.cpan.org/search?mode=module&query=Path::Router) is heavy.It depend to [Moose](http://search.cpan.org/search?mode=module&query=Moose).

[HTTP::Router](http://search.cpan.org/search?mode=module&query=HTTP::Router) has many deps.It doesn't well documented.

[HTTPx::Dispatcher](http://search.cpan.org/search?mode=module&query=HTTPx::Dispatcher) is my old one.It does not provides OOish interface.

# THANKS TO

DeNA

# LICENSE

Copyright (C) Tokuhiro Matsuno

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.